@*@model IEnumerable<Interview.Models.Employees>

    @{
        ViewBag.Title = "員工列表";
    }

    <h2>員工列表</h2>


    <table class="table table-striped table-bordered">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TitleOfCourtesy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomePhone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Extension)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeID)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TitleOfCourtesy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HomePhone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Extension)
                </td>
                <td>
                    <div class="form-group">
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-warning btn-block" })
                    </div>
                    <div class="form-group">
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-info btn-block" })
                    </div>
                    <div class="form-group">
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-danger btn-block" })
                    </div>
                </td>
            </tr>
        }
    </table>*@



<!DOCTYPE html>
<html>
<head>
    <title>員工列表</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <h2>員工列表</h2>
    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger">
            @ViewBag.ErrorMessage
        </div>
    }
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>EmployeeID</th>
                <th>LastName</th>
                <th>FirstName</th>
                <th>Account Number</th>
                <th>Password</th>
                <th>Role</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="employeeList"></tbody>
    </table>

    <script>
        $.ajax({
            url: '/Employee/GetEmployees',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                console.log(data);
                const employeeList = $('#employeeList');
                $.each(data, function (index, employee) {
                    const row = $('<tr></tr>');
                    row.append(`
                                    <td>${employee.EmployeeID}</td>
                                    <td>${employee.LastName}</td>
                                    <td>${employee.FirstName}</td>
                                    <td>${employee.AccountNumber}</td>
                                    <td>${employee.Password}</td>
                                    <td>${employee.Role}</td>
                                    <td>
                                        <div class="form-group">
                                            <a href="/employee/edit/${employee.EmployeeID}" class="btn btn-warning btn-block">Edit</a>
                                        </div>
                                        <div class="form-group">
                                            <a href="/employee/delete/${employee.EmployeeID}" class="btn btn-danger btn-block" onclick="return confirmDelete(${employee.EmployeeID}, '${employee.FirstName} ${employee.LastName}');">Delete</a>
                                        </div>
                                    </td>
                                `);
                    employeeList.append(row);
                });
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
        function confirmDelete(employeeId, employeeName) {
            if (confirm('是否確認要刪除? ')) {
                return true;
            } else {
                return false;
            }
        }
    </script>
</body>
</html>